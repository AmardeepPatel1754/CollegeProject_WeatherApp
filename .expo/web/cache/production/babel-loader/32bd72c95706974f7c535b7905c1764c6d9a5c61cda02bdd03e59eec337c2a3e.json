{"ast":null,"code":"import{PermissionStatus}from'expo-modules-core';import{LocationAccuracy}from'./Location.types';import{LocationEventEmitter}from'./LocationEventEmitter';class GeocoderError extends Error{constructor(){super('Geocoder service is not available for this device.');this.code='E_NO_GEOCODER';}}function geolocationPositionToJSON(position){const{coords,timestamp}=position;return{coords:{latitude:coords.latitude,longitude:coords.longitude,altitude:coords.altitude,accuracy:coords.accuracy,altitudeAccuracy:coords.altitudeAccuracy,heading:coords.heading,speed:coords.speed},timestamp};}function isLocationValid(location,options){const maxAge=typeof options.maxAge==='number'?options.maxAge:Infinity;const requiredAccuracy=typeof options.requiredAccuracy==='number'?options.requiredAccuracy:Infinity;const locationAccuracy=location.coords.accuracy??Infinity;return Date.now()-location.timestamp<=maxAge&&locationAccuracy<=requiredAccuracy;}async function getPermissionsAsync(){return new Promise(resolve=>{const resolveWithStatus=status=>resolve({status,granted:status===PermissionStatus.GRANTED,canAskAgain:true,expires:0});navigator.geolocation.getCurrentPosition(()=>resolveWithStatus(PermissionStatus.GRANTED),({code})=>{if(code===1){resolveWithStatus(PermissionStatus.DENIED);}else{resolveWithStatus(PermissionStatus.UNDETERMINED);}},{enableHighAccuracy:false,maximumAge:Infinity});});}let lastKnownPosition=null;export default{get name(){return'ExpoLocation';},async getProviderStatusAsync(){return{locationServicesEnabled:'geolocation'in navigator};},async getLastKnownPositionAsync(options={}){if(lastKnownPosition&&isLocationValid(lastKnownPosition,options)){return lastKnownPosition;}return null;},async getCurrentPositionAsync(options){return new Promise((resolve,reject)=>{const resolver=position=>{lastKnownPosition=geolocationPositionToJSON(position);resolve(lastKnownPosition);};navigator.geolocation.getCurrentPosition(resolver,reject,Object.assign({maximumAge:Infinity,enableHighAccuracy:(options.accuracy??0)>LocationAccuracy.Balanced},options));});},async removeWatchAsync(watchId){navigator.geolocation.clearWatch(watchId);},async watchDeviceHeading(headingId){console.warn('Location.watchDeviceHeading: is not supported on web');},async hasServicesEnabledAsync(){return'geolocation'in navigator;},async geocodeAsync(){throw new GeocoderError();},async reverseGeocodeAsync(){throw new GeocoderError();},async watchPositionImplAsync(watchId,options){return new Promise(resolve=>{watchId=global.navigator.geolocation.watchPosition(position=>{lastKnownPosition=geolocationPositionToJSON(position);LocationEventEmitter.emit('Expo.locationChanged',{watchId,location:lastKnownPosition});},undefined,options);resolve(watchId);});},getPermissionsAsync,async requestPermissionsAsync(){return getPermissionsAsync();},async requestForegroundPermissionsAsync(){return getPermissionsAsync();},async requestBackgroundPermissionsAsync(){return getPermissionsAsync();},async getForegroundPermissionsAsync(){return getPermissionsAsync();},async getBackgroundPermissionsAsync(){return getPermissionsAsync();},startObserving(){},stopObserving(){}};","map":{"version":3,"names":["PermissionStatus","LocationAccuracy","LocationEventEmitter","GeocoderError","Error","constructor","code","geolocationPositionToJSON","position","coords","timestamp","latitude","longitude","altitude","accuracy","altitudeAccuracy","heading","speed","isLocationValid","location","options","maxAge","Infinity","requiredAccuracy","locationAccuracy","Date","now","getPermissionsAsync","Promise","resolve","resolveWithStatus","status","granted","GRANTED","canAskAgain","expires","navigator","geolocation","getCurrentPosition","DENIED","UNDETERMINED","enableHighAccuracy","maximumAge","lastKnownPosition","name","getProviderStatusAsync","locationServicesEnabled","getLastKnownPositionAsync","getCurrentPositionAsync","reject","resolver","Object","assign","Balanced","removeWatchAsync","watchId","clearWatch","watchDeviceHeading","headingId","console","warn","hasServicesEnabledAsync","geocodeAsync","reverseGeocodeAsync","watchPositionImplAsync","global","watchPosition","emit","undefined","requestPermissionsAsync","requestForegroundPermissionsAsync","requestBackgroundPermissionsAsync","getForegroundPermissionsAsync","getBackgroundPermissionsAsync","startObserving","stopObserving"],"sources":["D:\\WeatherApp\\WeatherApp\\node_modules\\expo-location\\src\\ExpoLocation.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus } from 'expo-modules-core';\n\nimport {\n  LocationLastKnownOptions,\n  LocationObject,\n  LocationOptions,\n  LocationAccuracy,\n} from './Location.types';\nimport { LocationEventEmitter } from './LocationEventEmitter';\n\nclass GeocoderError extends Error {\n  code: string;\n\n  constructor() {\n    super('Geocoder service is not available for this device.');\n    this.code = 'E_NO_GEOCODER';\n  }\n}\n\n/**\n * Converts `GeolocationPosition` to JavaScript object.\n */\nfunction geolocationPositionToJSON(position: LocationObject): LocationObject {\n  const { coords, timestamp } = position;\n  return {\n    coords: {\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      altitude: coords.altitude,\n      accuracy: coords.accuracy,\n      altitudeAccuracy: coords.altitudeAccuracy,\n      heading: coords.heading,\n      speed: coords.speed,\n    },\n    timestamp,\n  };\n}\n\n/**\n * Checks whether given location didn't exceed given `maxAge` and fits in the required accuracy.\n */\nfunction isLocationValid(location: LocationObject, options: LocationLastKnownOptions): boolean {\n  const maxAge = typeof options.maxAge === 'number' ? options.maxAge : Infinity;\n  const requiredAccuracy =\n    typeof options.requiredAccuracy === 'number' ? options.requiredAccuracy : Infinity;\n  const locationAccuracy = location.coords.accuracy ?? Infinity;\n\n  return Date.now() - location.timestamp <= maxAge && locationAccuracy <= requiredAccuracy;\n}\n\n/**\n * Gets the permission details. The implementation is not very good as it actually requests\n * for the current location, but there is no better way on web so far :(\n */\nasync function getPermissionsAsync(): Promise<PermissionResponse> {\n  return new Promise<PermissionResponse>((resolve) => {\n    const resolveWithStatus = (status) =>\n      resolve({\n        status,\n        granted: status === PermissionStatus.GRANTED,\n        canAskAgain: true,\n        expires: 0,\n      });\n\n    navigator.geolocation.getCurrentPosition(\n      () => resolveWithStatus(PermissionStatus.GRANTED),\n      ({ code }) => {\n        if (code === 1 /* PERMISSION_DENIED */) {\n          resolveWithStatus(PermissionStatus.DENIED);\n        } else {\n          resolveWithStatus(PermissionStatus.UNDETERMINED);\n        }\n      },\n      { enableHighAccuracy: false, maximumAge: Infinity }\n    );\n  });\n}\n\nlet lastKnownPosition: LocationObject | null = null;\n\nexport default {\n  get name(): string {\n    return 'ExpoLocation';\n  },\n  async getProviderStatusAsync(): Promise<{ locationServicesEnabled: boolean }> {\n    return {\n      locationServicesEnabled: 'geolocation' in navigator,\n    };\n  },\n  async getLastKnownPositionAsync(\n    options: LocationLastKnownOptions = {}\n  ): Promise<LocationObject | null> {\n    if (lastKnownPosition && isLocationValid(lastKnownPosition, options)) {\n      return lastKnownPosition;\n    }\n    return null;\n  },\n  async getCurrentPositionAsync(options: LocationOptions): Promise<LocationObject> {\n    return new Promise<LocationObject>((resolve, reject) => {\n      const resolver = (position) => {\n        lastKnownPosition = geolocationPositionToJSON(position);\n        resolve(lastKnownPosition);\n      };\n      navigator.geolocation.getCurrentPosition(resolver, reject, {\n        maximumAge: Infinity,\n        enableHighAccuracy: (options.accuracy ?? 0) > LocationAccuracy.Balanced,\n        ...options,\n      });\n    });\n  },\n  async removeWatchAsync(watchId): Promise<void> {\n    navigator.geolocation.clearWatch(watchId);\n  },\n  async watchDeviceHeading(headingId): Promise<void> {\n    console.warn('Location.watchDeviceHeading: is not supported on web');\n  },\n  async hasServicesEnabledAsync(): Promise<boolean> {\n    return 'geolocation' in navigator;\n  },\n  async geocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async reverseGeocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async watchPositionImplAsync(watchId: string, options: LocationOptions): Promise<string> {\n    return new Promise<string>((resolve) => {\n      // @ts-ignore: the types here need to be fixed\n      watchId = global.navigator.geolocation.watchPosition(\n        (position) => {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          LocationEventEmitter.emit('Expo.locationChanged', {\n            watchId,\n            location: lastKnownPosition,\n          });\n        },\n        undefined,\n        // @ts-ignore: the options object needs to be fixed\n        options\n      );\n      resolve(watchId);\n    });\n  },\n\n  getPermissionsAsync,\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async requestForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async requestBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async getForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async getBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n\n  // no-op\n  startObserving() {},\n  stopObserving() {},\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}