{"ast":null,"code":"import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Button from\"react-native-web/dist/exports/Button\";import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import*as Location from'expo-location';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WeatherApp=()=>{const[city,setCity]=useState('');const[weatherData,setWeatherData]=useState(null);const[error,setError]=useState(null);const fetchWeatherData=async query=>{try{const response=await axios.get(`https://api.openweathermap.org/data/2.5/weather?${query}&appid=5489138f19995eb5c1f22ac442826c2d&units=metric`);setWeatherData(response.data);setError(null);}catch(error){console.error('Error fetching weather data:',error.response?.data||error.message);setError('City or location not found. Please enter a valid city name or check location.');}};const getCurrentLocation=async()=>{try{let{status}=await Location.requestForegroundPermissionsAsync();if(status!=='granted'){console.error('Permission to access location was denied');setError('Permission to access location was denied.');return;}let location=await Location.getCurrentPositionAsync({});const{latitude,longitude}=location.coords;fetchWeatherData(`lat=${latitude}&lon=${longitude}`);}catch(error){console.error('Error getting current location:',error);setError('Error getting current location. Please try again.');}};const getWindSpeedKmH=speed=>{return(speed*3.6).toFixed(2);};return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.title,children:\"Weather App\"}),_jsx(TextInput,{style:styles.input,placeholder:\"Enter city name\",onChangeText:text=>setCity(text),value:city}),_jsx(Button,{title:\"Get Weather\",onPress:()=>fetchWeatherData(`q=${city}`)}),_jsx(Button,{title:\"Use Current Location\",onPress:getCurrentLocation}),error&&_jsx(Text,{style:styles.errorText,children:error}),weatherData&&_jsxs(View,{style:styles.weatherContainer,children:[_jsx(Text,{style:styles.weatherText,children:weatherData.name}),_jsxs(Text,{style:styles.weatherText,children:[weatherData.main.temp,\" \\xB0C\"]}),_jsxs(Text,{style:styles.weatherText,children:[\"Humidity: \",weatherData.main.humidity,\"%\"]}),_jsxs(Text,{style:styles.weatherText,children:[\"Wind Speed: \",getWindSpeedKmH(weatherData.wind.speed),\" km/h\"]}),_jsx(Image,{source:{uri:`https://openweathermap.org/img/wn/${weatherData.weather[0].icon}.png`},style:styles.weatherIcon})]})]});};const styles=StyleSheet.create({container:{flex:1,justifyContent:'center',alignItems:'center',padding:20,backgroundColor:'#f0f0f0'},title:{fontSize:24,fontWeight:'bold',marginBottom:20},input:{borderWidth:1,borderColor:'#ccc',padding:10,marginBottom:10,width:'100%',borderRadius:5,backgroundColor:'#fff'},weatherContainer:{marginTop:20,alignItems:'center'},weatherText:{fontSize:18,marginBottom:5},weatherIcon:{width:50,height:50},errorText:{fontSize:16,color:'red',marginBottom:10}});export default WeatherApp;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","Image","StyleSheet","Location","axios","jsx","_jsx","jsxs","_jsxs","WeatherApp","city","setCity","weatherData","setWeatherData","error","setError","fetchWeatherData","query","response","get","data","console","message","getCurrentLocation","status","requestForegroundPermissionsAsync","location","getCurrentPositionAsync","latitude","longitude","coords","getWindSpeedKmH","speed","toFixed","style","styles","container","children","title","input","placeholder","onChangeText","text","value","onPress","errorText","weatherContainer","weatherText","name","main","temp","humidity","wind","source","uri","weather","icon","weatherIcon","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","borderWidth","borderColor","width","borderRadius","marginTop","height","color"],"sources":["D:/WeatherApp/WeatherApp/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, Image, StyleSheet } from 'react-native';\nimport * as Location from 'expo-location'; // Importing Location module from expo-location\nimport axios from 'axios'; // Importing axios for making HTTP requests\n\nconst WeatherApp = () => {\n  const [city, setCity] = useState(''); // State to store the city name entered by the user\n  const [weatherData, setWeatherData] = useState(null); // State to store the weather data\n  const [error, setError] = useState(null); // State to store any errors that occur during fetching weather data\n\n  // Function to fetch weather data for the entered city\n  const fetchWeatherData = async (query) => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?${query}&appid=5489138f19995eb5c1f22ac442826c2d&units=metric`);\n      setWeatherData(response.data);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching weather data:', error.response?.data || error.message);\n      setError('City or location not found. Please enter a valid city name or check location.');\n    }\n  };\n\n  // Function to get the current location of the device and fetch weather data for that location\n  const getCurrentLocation = async () => {\n    try {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Permission to access location was denied');\n        setError('Permission to access location was denied.');\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      const { latitude, longitude } = location.coords;\n      // Fetching weather data for the current location\n      fetchWeatherData(`lat=${latitude}&lon=${longitude}`);\n    } catch (error) {\n      console.error('Error getting current location:', error);\n      setError('Error getting current location. Please try again.');\n    }\n  };\n\n  // Function to convert wind speed from m/s to km/h\n  const getWindSpeedKmH = (speed) => {\n    return (speed * 3.6).toFixed(2);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Weather App</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter city name\"\n        onChangeText={(text) => setCity(text)}\n        value={city}\n      />\n      <Button title=\"Get Weather\" onPress={() => fetchWeatherData(`q=${city}`)} />\n      <Button title=\"Use Current Location\" onPress={getCurrentLocation} />\n      {error && <Text style={styles.errorText}>{error}</Text>}\n      {weatherData && (\n        <View style={styles.weatherContainer}>\n          <Text style={styles.weatherText}>{weatherData.name}</Text>\n          <Text style={styles.weatherText}>{weatherData.main.temp} Â°C</Text>\n          <Text style={styles.weatherText}>Humidity: {weatherData.main.humidity}%</Text>\n          <Text style={styles.weatherText}>Wind Speed: {getWindSpeedKmH(weatherData.wind.speed)} km/h</Text>\n          <Image\n            source={{\n              uri: `https://openweathermap.org/img/wn/${weatherData.weather[0].icon}.png`,\n            }}\n            style={styles.weatherIcon}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    marginBottom: 10,\n    width: '100%',\n    borderRadius: 5,\n    backgroundColor: '#fff',\n  },\n  weatherContainer: {\n    marginTop: 20,\n    alignItems: 'center',\n  },\n  weatherText: {\n    fontSize: 18,\n    marginBottom: 5,\n  },\n  weatherIcon: {\n    width: 50,\n    height: 50,\n  },\n  errorText: {\n    fontSize: 16,\n    color: 'red',\n    marginBottom: 10,\n  },\n});\n\nexport default WeatherApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}